# mdaudiobook Google Cloud TTS Configuration
# Professional Markdown to Audiobook Pipeline - Optimized for Google AI API
# 
# To use this configuration:
# 1. Ensure GOOGLE_APPLICATION_CREDENTIALS and GOOGLE_CLOUD_PROJECT are set in .env
# 2. Rename this file to default.yaml: cp config/default.yaml.google config/default.yaml
# 3. Run: make audiobook-api SOURCE=your_document.md

# =============================================================================
# PROCESSING CONFIGURATION
# =============================================================================
processing:
  # Processing mode: basic, local_ai, api, hybrid
  mode: "api"
  
  # Enable parallel processing
  parallel: true
  
  # Number of worker threads
  workers: 4
  
  # Enable caching for processed content
  cache_enabled: true
  
  # Cache directory
  cache_dir: ".cache"

# =============================================================================
# DOCUMENT PROCESSING
# =============================================================================
markdown:
  # Preserve emphasis markers for voice modulation
  preserve_emphasis: true
  
  # Extract and process LaTeX math expressions
  extract_math: true
  
  # Chapter detection method: headers, frontmatter, auto
  chapter_detection: "headers"
  
  # Header levels to treat as chapters (# = h1, ## = h2, ### = h3, #### = h4)
  # Include level 1 for main titles to be read as first chapter
  chapter_levels: [1, 2, 3, 4]
  
  # Process footnotes and citations
  process_citations: true
  
  # Handle code blocks specially
  process_code_blocks: true

# =============================================================================
# TEXT ENHANCEMENT
# =============================================================================
text_enhancement:
  # Enhancement mode: template, local_ai, api
  mode: "api"
  
  # Template-based enhancement settings
  template:
    # Mathematical expression conversion
    math_to_speech: true
    
    # Citation formatting for audio
    format_citations: true
    
    # Pronunciation guide
    pronunciation_guide: true
    
  # Local AI enhancement (Ollama)
  local_ai:
    enabled: false
    model: "llama2:7b"
    host: "http://localhost:11434"
    
  # API-based enhancement
  api:
    enabled: true
    provider: "openrouter"  # openai, anthropic, openrouter
    model: "anthropic/claude-3-haiku"
    max_tokens: 4000
    temperature: 0.3

# =============================================================================
# AUDIO PROCESSING
# =============================================================================
audio:
  # Output format: m4b (audiobook), mp3, wav
  format: "m4b"
  
  # Audio quality: low (22kHz), medium (44kHz), high (48kHz)
  quality: "high"
  
  # Sample rate (Hz)
  sample_rate: 44100
  
  # Bitrate for compressed formats
  bitrate: "128k"
  
  # Enable chapter markers
  chapter_markers: true
  
  # Enable metadata embedding
  embed_metadata: true
  
  # Silence padding between chapters (seconds)
  chapter_padding: 2.0
  
  # Normalize audio levels
  normalize: true
  
  # Noise reduction
  noise_reduction: false

# =============================================================================
# VOICE CONFIGURATION - OPTIMIZED FOR GOOGLE CLOUD TTS
# =============================================================================
voices:
  # Main narrator voice - Google Wavenet (Premium)
  main_narrator:
    provider: "google"
    voice_id: "en-US-Wavenet-D"  # Natural male voice
    language_code: "en-US"
    speed: 1.0
    pitch: 0.0
    emphasis: 1.1
    
  # Main title voice (# Level 1) - Professional, deep male voice
  main_title_voice:
    provider: "google"
    voice_id: "en-US-Wavenet-D"  # Premium male voice, natural and deep
    language_code: "en-US"
    speed: 0.85  # Slightly slower for gravitas
    pitch: -1.0  # Moderately deep, not extreme
    emphasis: 1.4  # Strong but natural emphasis
    pause_after: 2.5
    
  # Chapter header voice (## Level 2) - Authoritative male voice
  chapter_voice:
    provider: "google"
    voice_id: "en-US-Wavenet-D"  # Strong male voice for chapters
    language_code: "en-US"
    speed: 0.85
    pitch: -1.0  # Lower pitch for authority
    emphasis: 1.4
    pause_after: 2.0
    
  # Section voice (### Level D) - Same high-quality voice as main title
  section_voice:
    provider: "google"
    voice_id: "en-US-Wavenet-D"  # Same premium male voice as main title
    language_code: "en-US"
    speed: 0.9   # Slightly faster than main title
    pitch: -0.8  # Slightly higher than main title but still deep
    emphasis: 1.3
    pause_after: 1.5
    
  # Subsection voice (#### Level 4+) - Subtle male distinction
  subsection_voice:
    provider: "google"
    voice_id: "en-US-Wavenet-D"  # Different male voice for subsections
    language_code: "en-US"
    speed: 0.95
    pitch: 0.0   # Normal pitch but distinct voice
    emphasis: 1.2
    pause_after: 1.0
    
  # Mathematical expression voice - Clear articulation
  math_voice:
    provider: "google"
    voice_id: "en-US-Wavenet-D"  # Clear male voice
    language_code: "en-US"
    speed: 0.8  # Slower for clarity
    pitch: -1.0
    emphasis: 1.0
    pause_before: 1.5
    pause_after: 1.0
    
  # Secondary voice for footnotes/citations
  secondary_voice:
    provider: "google"
    voice_id: "en-US-Wavenet-D"  # Softer female voice
    language_code: "en-US"
    speed: 0.95
    pitch: -0.5
    emphasis: 0.9
    
  # Code block voice - Monotone for technical content
  code_voice:
    provider: "google"
    voice_id: "en-US-Wavenet-D"  # Standard voice for code
    language_code: "en-US"
    speed: 0.85
    pitch: -2.0
    emphasis: 0.8

# =============================================================================
# TTS PROVIDER SETTINGS
# =============================================================================
tts_providers:
  # Piper TTS (Local) - Disabled for Google-focused config
  piper:
    enabled: false
    model_dir: "models/piper"
    default_voice: "en_US-lessac-medium"
    
  # ElevenLabs (API) - Disabled
  elevenlabs:
    enabled: false
    api_key: "${ELEVENLABS_API_KEY}"
    default_voice: "21m00Tcm4TlvDq8ikWAM"
    model: "eleven_monolingual_v1"
    
  # Azure Cognitive Services (API) - Disabled
  azure:
    enabled: false
    api_key: "${AZURE_SPEECH_KEY}"
    region: "${AZURE_SPEECH_REGION}"
    default_voice: "en-US-AriaNeural"
    
  # Google Cloud TTS (API) - PRIMARY PROVIDER
  google:
    enabled: true  # ENABLED for Google API usage
    credentials_file: "${GOOGLE_APPLICATION_CREDENTIALS}"
    project_id: "${GOOGLE_CLOUD_PROJECT}"
    default_voice: "en-US-Wavenet-D"
    language_code: "en-US"
    # Available voices: Wavenet (premium), Standard (basic), Neural2 (latest)
    # Male voices: Wavenet-A, Wavenet-B, Wavenet-D
    # Female voices: Wavenet-C, Wavenet-E, Wavenet-F
    
  # OpenAI TTS (API) - Fallback option
  openai:
    enabled: false
    api_key: "${OPENAI_API_KEY}"
    model: "tts-1-hd"  # Use HD model for quality
    voice: "onyx"  # Professional male voice
    speed: 1.0

# =============================================================================
# AI PROVIDER SETTINGS
# =============================================================================
ai_providers:
  # OpenAI
  openai:
    enabled: false
    api_key: "${OPENAI_API_KEY}"
    model: "gpt-3.5-turbo"
    max_tokens: 4000
    temperature: 0.3
    
  # Anthropic Claude
  anthropic:
    enabled: false
    api_key: "${ANTHROPIC_API_KEY}"
    model: "claude-3-haiku-20240307"
    max_tokens: 4000
    temperature: 0.3
    
  # OpenRouter (Cost-effective API access) - PRIMARY AI PROVIDER
  openrouter:
    enabled: true
    api_key: "${OPENROUTER_API_KEY}"
    model: "anthropic/claude-3-haiku"  # Cost-effective, high-quality
    max_tokens: 4000
    temperature: 0.3
    base_url: "https://openrouter.ai/api/v1"
    
  # Ollama (Local AI)
  ollama:
    enabled: false
    host: "${OLLAMA_HOST}"
    model: "${OLLAMA_MODEL}"
    temperature: 0.3

# =============================================================================
# OUTPUT CONFIGURATION
# =============================================================================
output:
  # Output directory
  directory: "output"
  
  # Filename template: {title}, {author}, {date}, {format}
  filename_template: "{title}_audiobook.{format}"
  
  # Create subdirectories by author
  organize_by_author: false
  
  # Preserve original markdown structure in output
  preserve_structure: true
  
  # Generate companion files
  generate_transcript: true
  generate_chapters: true
  generate_metadata: true

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================
logging:
  # Log level: DEBUG, INFO, WARNING, ERROR
  level: "INFO"
  
  # Log file path
  file: "logs/mdaudiobook.log"
  
  # Enable console output
  console: true
  
  # Log format
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Performance monitoring
monitoring:
  enabled: true
  metrics_file: "logs/performance.json"
  track_processing_time: true
  track_api_usage: true
  track_costs: true

# =============================================================================
# DEVELOPMENT AND DEBUGGING
# =============================================================================
development:
  # Enable debug mode
  debug: false
  
  # Enable verbose output
  verbose: false
  
  # Save intermediate files for debugging
  save_intermediate: false
  
  # Test mode (process only first chapter)
  test_mode: false
